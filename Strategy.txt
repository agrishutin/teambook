-  Проверить руками сэмплы
-  Подумать как дебагать после написания
-  Выписать сложные формулы и все +-1
-  Проверить имена файлов
-  Прогнать сэмплы
-  Переполнения int, переполнения long long
-  Выход за границу массива: _GLIBCXX_DEBUG
-  Переполнения по модулю: в псевдо-онлайн-генераторе, в функциях-обертках
-  Проверить мультитест на разных тестах
-  Прогнать минимальный по каждому параметру тест
-  Прогнать псевдо-максимальный тест(немного чисел, но очень большие или очень маленькие)
-  Представить что не зайдет и заранее написать assert'ы, прогнать слегка модифицированные тесты
-  cout.precision: в том числе в интерактивных задачах
-  Удалить debug-output, отсечения для тестов, вернуть оригинальный maxn, удалить _GLIBCXX_DEBUG
-  Вердикт может врать
-  Если много тестов(>3), дописать в конец каждого теста ответ, чтобы не забыть
-  (WA) Потестить не только ответ, но и содержимое значимых массивов, переменных
-  (WA) Изменить тест так, чтобы ответ не менялся: поменять координаты местами, сжать/растянуть координаты, поменять ROOT дерева
-  (WA) Подвигать размер блока в корневой или битсете
-  (WA) Поставить assert'ы, возможно написать чекер с assert'ом
-  (WA) Проверить, что программа не печатает что-либо неожиданное, что должно попадать под PE: inf - 2, не лекс. мин. решение, одинаковые числа вместо разных, неправильное количество чисел, пустой ответ, перечитать output format
-  (TL) cin -> scanf -> getchar
-  (TL) Упихать в кэш большие массивы, поменять местами for'ы или измерения массива
-  (RE) Проверить формулы на деление на 0, выход за область определения(sqrt(-eps), acos(1 + eps))
-  (WA) Проверить, что ответ влезает в int
